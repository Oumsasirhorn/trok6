// backend/routes/orderRoutes.js
"use strict";

const express = require("express");
const router = express.Router();

const {
  getAllOrders,
  getOrdersByTable,
  createOrder,
  updateOrderStatus,
  payOrder,
  deleteOrder,
} = require("../controllers/orderController");

// üß∑ ‡πÉ‡∏ä‡πâ session ‡πÇ‡∏ï‡πä‡∏∞‡∏à‡∏≤‡∏Å‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏≤‡∏£‡πå
const {
  requireTableSession,
} = require("../controllers/qrAuthController");

/* ---------- Middlewares ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ù‡∏±‡πà‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡πÇ‡∏ï‡πä‡∏∞) ---------- */

/** ‡πÉ‡∏™‡πà table_id ‡∏à‡∏≤‡∏Å session ‡πÄ‡∏Ç‡πâ‡∏≤ req.body/req.params ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ controller ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ */
function injectTableFromSession(req, _res, next) {
  // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ controller ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á table_id ‡πÉ‡∏ô body
  if (!req.body) req.body = {};
  req.body.table_id = req.table_id;

  // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ controller ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á table_id ‡πÉ‡∏ô params (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö getOrdersByTable ‡πÅ‡∏ö‡∏ö /table/:table_id)
  if (!req.params) req.params = {};
  req.params.table_id = String(req.table_id);

  next();
}

/** ‡∏Å‡∏±‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏¥‡∏á /table/:table_id ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö session */
function ensureSameTable(req, res, next) {
  const paramId = Number(req.params.table_id);
  if (!Number.isFinite(paramId)) {
    return res.status(400).json({ error: "BAD_TABLE_ID" });
  }
  if (paramId !== Number(req.table_id)) {
    return res.status(403).json({ error: "FORBIDDEN_DIFFERENT_TABLE" });
  }
  next();
}

/* ---------- Routes ---------- */

/**
 * ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡∏∂‡∏á‡∏ó‡∏∏‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
 * ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ‡∏Ñ‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏≠‡∏ö middleware auth ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï
 */
router.get("/", getAllOrders);

/**
 * ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏î‡∏∂‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á "‡πÇ‡∏ï‡πä‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á"
 * - ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ table session
 * - ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ :table_id ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö session
 */
router.get(
  "/table/:table_id",
  requireTableSession,
  ensureSameTable,
  getOrdersByTable
);

/**
 * ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ï‡πä‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á)
 * - ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ table session
 * - ‡∏¢‡∏±‡∏î table_id ‡∏à‡∏≤‡∏Å session ‡πÄ‡∏Ç‡πâ‡∏≤ body ‡πÉ‡∏´‡πâ controller ‡πÄ‡∏™‡∏°‡∏≠
 */
router.post(
  "/",
  requireTableSession,
  injectTableFromSession,
  createOrder
);

/**
 * ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå (‡πÄ‡∏ä‡πà‡∏ô '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' -> '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥' -> '‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏•‡πâ‡∏ß')
 * ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ middleware auth ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
 */
router.put("/:order_id/status", updateOrderStatus);

/**
 * ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô/‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå ‡∏Å‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
 * ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ middleware auth ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
 */
router.put("/:order_id/pay", payOrder);

/**
 * ‡∏•‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå (‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
 */
router.delete("/:id", deleteOrder);

module.exports = router;
